src/chess/Cell.java:13:	Avoid short class names like Cell
src/chess/Cell.java:18:	Avoid excessively long variable names like ispossibledestination
src/chess/Cell.java:18:	Field ispossibledestination has the same name as a method
src/chess/Cell.java:18:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:18:	fieldCommentRequirement Required
src/chess/Cell.java:19:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:19:	fieldCommentRequirement Required
src/chess/Cell.java:20:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:20:	fieldCommentRequirement Required
src/chess/Cell.java:21:	Avoid variables with short names like x
src/chess/Cell.java:21:	Avoid variables with short names like y
src/chess/Cell.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:21:	To avoid mistakes add a comment at the beginning of the x field if you want a default access modifier
src/chess/Cell.java:21:	Use explicit scoping instead of the default package private level
src/chess/Cell.java:21:	fieldCommentRequirement Required
src/chess/Cell.java:22:	Avoid using redundant field initializer for 'isSelected'
src/chess/Cell.java:22:	Field isSelected has the same name as a method
src/chess/Cell.java:22:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:22:	fieldCommentRequirement Required
src/chess/Cell.java:23:	Avoid using redundant field initializer for 'ischeck'
src/chess/Cell.java:23:	Field ischeck has the same name as a method
src/chess/Cell.java:23:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:23:	fieldCommentRequirement Required
src/chess/Cell.java:26:	Avoid variables with short names like p
src/chess/Cell.java:26:	Avoid variables with short names like x
src/chess/Cell.java:26:	Avoid variables with short names like y
src/chess/Cell.java:26:	It is a good practice to call super() in a constructor
src/chess/Cell.java:26:	Parameter 'p' is not assigned and could be declared final
src/chess/Cell.java:26:	Parameter 'x' is not assigned and could be declared final
src/chess/Cell.java:26:	Parameter 'y' is not assigned and could be declared final
src/chess/Cell.java:26:	publicMethodCommentRequirement Required
src/chess/Cell.java:34:	Avoid using if...else statements without curly braces
src/chess/Cell.java:37:	Avoid using if...else statements without curly braces
src/chess/Cell.java:39:	Avoid using if statements without curly braces
src/chess/Cell.java:40:	Overridable method 'setPiece' called during object construction
src/chess/Cell.java:43:	Comment is too large: Line too long
src/chess/Cell.java:44:	It is a good practice to call super() in a constructor
src/chess/Cell.java:44:	Parameter 'cell' is not assigned and could be declared final
src/chess/Cell.java:44:	publicMethodCommentRequirement Required
src/chess/Cell.java:50:	Avoid using if...else statements without curly braces
src/chess/Cell.java:52:	Avoid using if...else statements without curly braces
src/chess/Cell.java:53:	Avoid if (x != y) ..; else ..;
src/chess/Cell.java:55:	Overridable method 'setPiece' called during object construction
src/chess/Cell.java:58:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Cell.java:58:	Avoid using if...else statements without curly braces
src/chess/Cell.java:61:	Avoid variables with short names like p
src/chess/Cell.java:61:	Parameter 'p' is not assigned and could be declared final
src/chess/Cell.java:61:	publicMethodCommentRequirement Required
src/chess/Cell.java:64:	Local variable 'img' could be declared final
src/chess/Cell.java:64:	Unnecessary use of fully qualified name 'javax.swing.ImageIcon' due to existing import 'javax.swing.*'
src/chess/Cell.java:69:	publicMethodCommentRequirement Required
src/chess/Cell.java:73:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Cell.java:78:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Cell.java:84:	publicMethodCommentRequirement Required
src/chess/Cell.java:89:	publicMethodCommentRequirement Required
src/chess/Cell.java:95:	publicMethodCommentRequirement Required
src/chess/Cell.java:100:	publicMethodCommentRequirement Required
src/chess/Cell.java:106:	publicMethodCommentRequirement Required
src/chess/Cell.java:112:	publicMethodCommentRequirement Required
src/chess/Cell.java:118:	publicMethodCommentRequirement Required
src/chess/Cell.java:123:	publicMethodCommentRequirement Required
src/chess/Cell.java:129:	publicMethodCommentRequirement Required
src/chess/Cell.java:133:	Avoid using if...else statements without curly braces
src/chess/Cell.java:135:	Avoid using if...else statements without curly braces
src/chess/Cell.java:139:	publicMethodCommentRequirement Required
src/chess/Main.java:1:	Possible God class (WMC=149, ATFD=167, TCC=0.1437908496732026)
src/chess/Main.java:30:	Avoid short class names like Main
src/chess/Main.java:30:	The class 'Main' has a Cyclomatic Complexity of 8 (Highest = 41).
src/chess/Main.java:30:	The class 'Main' has a Modified Cyclomatic Complexity of 6 (Highest = 25).
src/chess/Main.java:30:	The class 'Main' has a Standard Cyclomatic Complexity of 6 (Highest = 25).
src/chess/Main.java:30:	Too many fields
src/chess/Main.java:31:	This class has too many methods, consider refactoring it.
src/chess/Main.java:35:	Variables that are final and static should be all capitals, 'Height' is not all capitals.
src/chess/Main.java:35:	fieldCommentRequirement Required
src/chess/Main.java:36:	Variables that are final and static should be all capitals, 'Width' is not all capitals.
src/chess/Main.java:36:	fieldCommentRequirement Required
src/chess/Main.java:37:	fieldCommentRequirement Required
src/chess/Main.java:38:	fieldCommentRequirement Required
src/chess/Main.java:39:	fieldCommentRequirement Required
src/chess/Main.java:40:	Avoid variables with short names like bp
src/chess/Main.java:40:	Avoid variables with short names like wp
src/chess/Main.java:40:	fieldCommentRequirement Required
src/chess/Main.java:41:	Avoid variables with short names like bq
src/chess/Main.java:41:	Avoid variables with short names like wq
src/chess/Main.java:41:	fieldCommentRequirement Required
src/chess/Main.java:42:	Avoid variables with short names like bk
src/chess/Main.java:42:	Avoid variables with short names like wk
src/chess/Main.java:42:	fieldCommentRequirement Required
src/chess/Main.java:43:	Avoid variables with short names like c
src/chess/Main.java:43:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:43:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:43:	Perhaps 'c' could be replaced by a local variable.
src/chess/Main.java:43:	fieldCommentRequirement Required
src/chess/Main.java:44:	Avoid using redundant field initializer for 'chance'
src/chess/Main.java:44:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:44:	fieldCommentRequirement Required
src/chess/Main.java:45:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:45:	Private field 'boardState' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:45:	fieldCommentRequirement Required
src/chess/Main.java:46:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:46:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:46:	fieldCommentRequirement Required
src/chess/Main.java:47:	Avoid using redundant field initializer for 'Black'
src/chess/Main.java:47:	Avoid using redundant field initializer for 'White'
src/chess/Main.java:47:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:47:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:47:	Variables should start with a lowercase character, 'Black' starts with uppercase character.
src/chess/Main.java:47:	Variables should start with a lowercase character, 'White' starts with uppercase character.
src/chess/Main.java:47:	fieldCommentRequirement Required
src/chess/Main.java:48:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:48:	Private field 'board' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:48:	fieldCommentRequirement Required
src/chess/Main.java:49:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:49:	Private field 'wdetails' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:49:	fieldCommentRequirement Required
src/chess/Main.java:50:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:50:	Private field 'bdetails' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:50:	fieldCommentRequirement Required
src/chess/Main.java:51:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:51:	Perhaps 'wcombopanel' could be replaced by a local variable.
src/chess/Main.java:51:	Private field 'wcombopanel' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:51:	fieldCommentRequirement Required
src/chess/Main.java:52:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:52:	Perhaps 'bcombopanel' could be replaced by a local variable.
src/chess/Main.java:52:	Private field 'bcombopanel' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:52:	fieldCommentRequirement Required
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Perhaps 'time' could be replaced by a local variable.
src/chess/Main.java:53:	Private field 'BlackPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'WhitePlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'controlPanel' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'displayTime' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'showPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'temp' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'time' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Variables should start with a lowercase character, 'BlackPlayer' starts with uppercase character.
src/chess/Main.java:53:	Variables should start with a lowercase character, 'WhitePlayer' starts with uppercase character.
src/chess/Main.java:53:	fieldCommentRequirement Required
src/chess/Main.java:54:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:54:	Private field 'split' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:54:	fieldCommentRequirement Required
src/chess/Main.java:55:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:55:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:55:	Private field 'label' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:55:	fieldCommentRequirement Required
src/chess/Main.java:56:	The field name indicates a constant but its modifiers do not
src/chess/Main.java:56:	Variables should start with a lowercase character, 'CHNC' starts with uppercase character.
src/chess/Main.java:56:	fieldCommentRequirement Required
src/chess/Main.java:57:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:57:	fieldCommentRequirement Required
src/chess/Main.java:58:	Variables should start with a lowercase character, 'Mainboard' starts with uppercase character.
src/chess/Main.java:58:	fieldCommentRequirement Required
src/chess/Main.java:59:	Avoid using redundant field initializer for 'end'
src/chess/Main.java:59:	Avoid using redundant field initializer for 'selected'
src/chess/Main.java:59:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:59:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:59:	fieldCommentRequirement Required
src/chess/Main.java:60:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:60:	Perhaps 'content' could be replaced by a local variable.
src/chess/Main.java:60:	Private field 'content' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:60:	fieldCommentRequirement Required
src/chess/Main.java:61:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:61:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:61:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:61:	Private field 'wplayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:61:	fieldCommentRequirement Required
src/chess/Main.java:62:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:62:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:62:	Perhaps 'Wnames' could be replaced by a local variable.
src/chess/Main.java:62:	Private field 'Wnames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:62:	Variables should start with a lowercase character, 'Wnames' starts with uppercase character.
src/chess/Main.java:62:	fieldCommentRequirement Required
src/chess/Main.java:63:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:63:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:63:	Perhaps 'Bnames' could be replaced by a local variable.
src/chess/Main.java:63:	Private field 'Bnames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:63:	Variables should start with a lowercase character, 'Bnames' starts with uppercase character.
src/chess/Main.java:63:	fieldCommentRequirement Required
src/chess/Main.java:64:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:64:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:64:	Private field 'bcombo' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:64:	Private field 'wcombo' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:64:	fieldCommentRequirement Required
src/chess/Main.java:65:	Avoid using redundant field initializer for 'bname'
src/chess/Main.java:65:	Avoid using redundant field initializer for 'winner'
src/chess/Main.java:65:	Avoid using redundant field initializer for 'wname'
src/chess/Main.java:65:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:65:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:65:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:65:	Private field 'bname' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:65:	Private field 'wname' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:65:	fieldCommentRequirement Required
src/chess/Main.java:66:	Possible unsafe assignment to a non-final static field in a constructor.
src/chess/Main.java:66:	To avoid mistakes add a comment at the beginning of the move field if you want a default access modifier
src/chess/Main.java:66:	Use explicit scoping instead of the default package private level
src/chess/Main.java:66:	fieldCommentRequirement Required
src/chess/Main.java:67:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:67:	fieldCommentRequirement Required
src/chess/Main.java:68:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:68:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:68:	Perhaps 'bscroll' could be replaced by a local variable.
src/chess/Main.java:68:	Perhaps 'wscroll' could be replaced by a local variable.
src/chess/Main.java:68:	Private field 'bscroll' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:68:	Private field 'wscroll' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:68:	fieldCommentRequirement Required
src/chess/Main.java:69:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:69:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:69:	Private field 'BNames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:69:	Private field 'WNames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:69:	Variables should start with a lowercase character, 'BNames' starts with uppercase character.
src/chess/Main.java:69:	Variables should start with a lowercase character, 'WNames' starts with uppercase character.
src/chess/Main.java:69:	fieldCommentRequirement Required
src/chess/Main.java:70:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:70:	Private field 'timeSlider' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:70:	fieldCommentRequirement Required
src/chess/Main.java:71:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:71:	Perhaps 'image' could be replaced by a local variable.
src/chess/Main.java:71:	fieldCommentRequirement Required
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Private field 'BNewPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'WNewPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'bselect' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'start' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'wselect' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Variables should start with a lowercase character, 'BNewPlayer' starts with uppercase character.
src/chess/Main.java:72:	Variables should start with a lowercase character, 'WNewPlayer' starts with uppercase character.
src/chess/Main.java:72:	fieldCommentRequirement Required
src/chess/Main.java:73:	Possible unsafe assignment to a non-final static field in a constructor.
src/chess/Main.java:73:	fieldCommentRequirement Required
src/chess/Main.java:74:	Parameter 'args' is not assigned and could be declared final
src/chess/Main.java:74:	publicMethodCommentRequirement Required
src/chess/Main.java:97:	Avoid instantiating new objects inside loops
src/chess/Main.java:98:	Avoid instantiating new objects inside loops
src/chess/Main.java:108:	It is a good practice to call super() in a constructor
src/chess/Main.java:108:	The constructor 'Main' has a Cyclomatic Complexity of 41.
src/chess/Main.java:108:	The constructor 'Main' has a Modified Cyclomatic Complexity of 25.
src/chess/Main.java:108:	The constructor 'Main' has a Standard Cyclomatic Complexity of 25.
src/chess/Main.java:108:	The constructor with 0 parameters has an NCSS line count of 171
src/chess/Main.java:113:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:114:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:115:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:124:	Local variable 'img' could be declared final
src/chess/Main.java:139:	Local variable 'witr' could be declared final
src/chess/Main.java:140:	Avoid using while statements without curly braces
src/chess/Main.java:144:	Local variable 'bitr' could be declared final
src/chess/Main.java:145:	Avoid using while statements without curly braces
src/chess/Main.java:152:	Avoid variables with short names like P
src/chess/Main.java:152:	Unnecessary use of fully qualified name 'pieces.Piece' due to existing import 'pieces.*'
src/chess/Main.java:152:	Variables should start with a lowercase character, 'P' starts with uppercase character.
src/chess/Main.java:171:	Local variable 'whitestats' could be declared final
src/chess/Main.java:172:	Local variable 'blackstats' could be declared final
src/chess/Main.java:209:	Avoid using for statements without curly braces
src/chess/Main.java:212:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'214').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'216').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'218').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'220').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'222').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'224').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'226').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'228').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'230').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'232').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'234').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'236').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'238').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'240').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'242').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'244').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'246').
src/chess/Main.java:212:	Found 'DD'-anomaly for variable 'P' (lines '212'-'248').
src/chess/Main.java:214:	Avoid using if...else statements without curly braces
src/chess/Main.java:216:	Avoid using if...else statements without curly braces
src/chess/Main.java:218:	Avoid using if...else statements without curly braces
src/chess/Main.java:220:	Avoid using if...else statements without curly braces
src/chess/Main.java:222:	Avoid using if...else statements without curly braces
src/chess/Main.java:224:	Avoid using if...else statements without curly braces
src/chess/Main.java:226:	Avoid using if...else statements without curly braces
src/chess/Main.java:228:	Avoid using if...else statements without curly braces
src/chess/Main.java:230:	Avoid using if...else statements without curly braces
src/chess/Main.java:232:	Avoid using if...else statements without curly braces
src/chess/Main.java:234:	Avoid using if...else statements without curly braces
src/chess/Main.java:236:	Avoid using if...else statements without curly braces
src/chess/Main.java:238:	Avoid using if...else statements without curly braces
src/chess/Main.java:240:	Avoid using if...else statements without curly braces
src/chess/Main.java:242:	Avoid using if...else statements without curly braces
src/chess/Main.java:244:	Avoid using if...else statements without curly braces
src/chess/Main.java:245:	Avoid using Literals in Conditional Statements
src/chess/Main.java:246:	Avoid using if...else statements without curly braces
src/chess/Main.java:247:	Avoid using Literals in Conditional Statements
src/chess/Main.java:247:	Avoid using if statements without curly braces
src/chess/Main.java:249:	Avoid instantiating new objects inside loops
src/chess/Main.java:256:	Local variable 'setTime' could be declared final
src/chess/Main.java:276:	Found 'DU'-anomaly for variable 'serialVersionUID' (lines '276'-'296').
src/chess/Main.java:279:	Avoid variables with short names like g
src/chess/Main.java:279:	Parameter 'g' is not assigned and could be declared final
src/chess/Main.java:279:	publicMethodCommentRequirement Required
src/chess/Main.java:281:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:281:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:281:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:283:	System.out.println is used
src/chess/Main.java:286:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:300:	publicMethodCommentRequirement Required
src/chess/Main.java:302:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:302:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:302:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:302:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:302:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:302:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:302:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:307:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:307:	Avoid using if statements without curly braces
src/chess/Main.java:309:	Avoid using if statements without curly braces
src/chess/Main.java:311:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:318:	Avoid using Literals in Conditional Statements
src/chess/Main.java:318:	Use equals() to compare strings instead of '==' or '!='
src/chess/Main.java:319:	Avoid using if...else statements without curly braces
src/chess/Main.java:321:	Avoid using if...else statements without curly braces
src/chess/Main.java:328:	Parameter 'color' is not assigned and could be declared final
src/chess/Main.java:331:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:331:	Avoid using if...else statements without curly braces
src/chess/Main.java:333:	Avoid using if...else statements without curly braces
src/chess/Main.java:337:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:337:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:339:	Avoid variables with short names like it
src/chess/Main.java:339:	Local variable 'it' could be declared final
src/chess/Main.java:340:	Avoid using while statements without curly braces
src/chess/Main.java:341:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:345:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:345:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:347:	Avoid variables with short names like it
src/chess/Main.java:347:	Local variable 'it' could be declared final
src/chess/Main.java:348:	Avoid using while statements without curly braces
src/chess/Main.java:349:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:354:	Parameter 'fromcell' is not assigned and could be declared final
src/chess/Main.java:354:	Parameter 'tocell' is not assigned and could be declared final
src/chess/Main.java:356:	Found 'DD'-anomaly for variable 'newboardstate' (lines '356'-'359').
src/chess/Main.java:357:	Avoid using for statements without curly braces
src/chess/Main.java:359:	Avoid instantiating new objects inside loops
src/chess/Main.java:359:	Avoid printStackTrace(); use a logger call instead.
src/chess/Main.java:359:	Found 'DD'-anomaly for variable 'newboardstate' (lines '359'-'359').
src/chess/Main.java:359:	System.out.println is used
src/chess/Main.java:361:	Avoid using if statements without curly braces
src/chess/Main.java:361:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:361:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:361:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:362:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:362:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:362:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:364:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:365:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:365:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:365:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:368:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:370:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:370:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:370:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:371:	Avoid unnecessary if..then..else statements when returning booleans
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:371:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:372:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:372:	Avoid using if...else statements without curly braces
src/chess/Main.java:374:	Avoid using if...else statements without curly braces
src/chess/Main.java:378:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:378:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:378:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:378:	Parameter 'fromcell' is not assigned and could be declared final
src/chess/Main.java:380:	Local variable 'newlist' could be declared final
src/chess/Main.java:381:	Found 'DD'-anomaly for variable 'newboardstate' (lines '381'-'389').
src/chess/Main.java:382:	Avoid variables with short names like it
src/chess/Main.java:382:	Local variable 'it' could be declared final
src/chess/Main.java:383:	Avoid variables with short names like x
src/chess/Main.java:383:	Avoid variables with short names like y
src/chess/Main.java:383:	Use one line for each declaration, it enhances code readability.
src/chess/Main.java:387:	Avoid using for statements without curly braces
src/chess/Main.java:389:	Avoid instantiating new objects inside loops
src/chess/Main.java:389:	Avoid printStackTrace(); use a logger call instead.
src/chess/Main.java:389:	Found 'DD'-anomaly for variable 'newboardstate' (lines '389'-'389').
src/chess/Main.java:391:	Local variable 'tempc' could be declared final
src/chess/Main.java:392:	Avoid using if statements without curly braces
src/chess/Main.java:392:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:392:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:392:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:393:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:393:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:393:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:394:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:395:	Found 'DD'-anomaly for variable 'x' (lines '395'-'401').
src/chess/Main.java:395:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:396:	Found 'DD'-anomaly for variable 'y' (lines '396'-'402').
src/chess/Main.java:396:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:397:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:397:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:397:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:399:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:400:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:404:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:404:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:404:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:405:	Avoid using if statements without curly braces
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:405:	Useless parentheses.
src/chess/Main.java:411:	Comment is too large: Line too long
src/chess/Main.java:412:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:412:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:412:	Parameter 'color' is not assigned and could be declared final
src/chess/Main.java:412:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:412:	Parameter 'fromcell' is not assigned and could be declared final
src/chess/Main.java:414:	Local variable 'newlist' could be declared final
src/chess/Main.java:415:	Found 'DD'-anomaly for variable 'newboardstate' (lines '415'-'422').
src/chess/Main.java:416:	Avoid variables with short names like it
src/chess/Main.java:416:	Local variable 'it' could be declared final
src/chess/Main.java:417:	Avoid variables with short names like x
src/chess/Main.java:417:	Avoid variables with short names like y
src/chess/Main.java:417:	Use one line for each declaration, it enhances code readability.
src/chess/Main.java:420:	Avoid using for statements without curly braces
src/chess/Main.java:422:	Avoid instantiating new objects inside loops
src/chess/Main.java:422:	Avoid printStackTrace(); use a logger call instead.
src/chess/Main.java:422:	Found 'DD'-anomaly for variable 'newboardstate' (lines '422'-'422').
src/chess/Main.java:423:	Local variable 'tempc' could be declared final
src/chess/Main.java:424:	Avoid using if statements without curly braces
src/chess/Main.java:424:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:424:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:424:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:425:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:425:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:425:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:427:	Found 'DD'-anomaly for variable 'x' (lines '427'-'433').
src/chess/Main.java:427:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:428:	Found 'DD'-anomaly for variable 'y' (lines '428'-'434').
src/chess/Main.java:428:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:431:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:437:	Avoid using if statements without curly braces
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	Useless parentheses.
src/chess/Main.java:443:	Comment is too large: Line too long
src/chess/Main.java:444:	Parameter 'color' is not assigned and could be declared final
src/chess/Main.java:444:	publicMethodCommentRequirement Required
src/chess/Main.java:446:	Found 'DU'-anomaly for variable 'dlist' (lines '446'-'462').
src/chess/Main.java:451:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:451:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:451:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:451:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:451:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:451:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:451:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:454:	Found 'DD'-anomaly for variable 'dlist' (lines '454'-'455').
src/chess/Main.java:454:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:454:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:454:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:454:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:455:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:455:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:456:	Avoid using if statements without curly braces
src/chess/Main.java:456:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:456:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/chess/Main.java:457:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:470:	Potential violation of Law of Demeter (static property access)
src/chess/Main.java:471:	Avoid using if statements without curly braces
src/chess/Main.java:509:	Comment is too large: Line too long
src/chess/Main.java:512:	Avoid really long methods.
src/chess/Main.java:512:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:512:	The method 'mouseClicked' has a Cyclomatic Complexity of 29.
src/chess/Main.java:512:	The method 'mouseClicked' has a Modified Cyclomatic Complexity of 24.
src/chess/Main.java:512:	The method 'mouseClicked' has a Standard Cyclomatic Complexity of 24.
src/chess/Main.java:512:	The method mouseClicked() has an NPath complexity of 834
src/chess/Main.java:512:	publicMethodCommentRequirement Required
src/chess/Main.java:519:	Avoid using if statements without curly braces
src/chess/Main.java:519:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:524:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:526:	Avoid using if...else statements without curly braces
src/chess/Main.java:529:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:529:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:529:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:529:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:529:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:529:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:529:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:530:	Avoid using if...else statements without curly braces
src/chess/Main.java:531:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:531:	Avoid using if statements without curly braces
src/chess/Main.java:544:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:546:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:546:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:550:	Avoid using if statements without curly braces
src/chess/Main.java:553:	Avoid using if statements without curly braces
src/chess/Main.java:556:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:558:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:558:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:558:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:558:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:558:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:558:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:558:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:559:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:559:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:562:	Avoid using if statements without curly braces
src/chess/Main.java:567:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:567:	Avoid using if statements without curly braces
src/chess/Main.java:567:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:568:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:568:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:568:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:568:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:568:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:568:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:568:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:571:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:572:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:584:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:589:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:589:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:596:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:598:	Avoid using if...else statements without curly braces
src/chess/Main.java:601:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:601:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:601:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:601:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:601:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:601:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:601:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:602:	Avoid using if...else statements without curly braces
src/chess/Main.java:603:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:603:	Avoid using if statements without curly braces
src/chess/Main.java:611:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:612:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:618:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:618:	publicMethodCommentRequirement Required
src/chess/Main.java:622:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:622:	publicMethodCommentRequirement Required
src/chess/Main.java:626:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:626:	publicMethodCommentRequirement Required
src/chess/Main.java:630:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:630:	publicMethodCommentRequirement Required
src/chess/Main.java:635:	Each class should declare at least one constructor
src/chess/Main.java:635:	To avoid mistakes add a comment at the beginning of the START nested class if you want a default access modifier
src/chess/Main.java:635:	headerCommentRequirement Required
src/chess/Main.java:640:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:640:	publicMethodCommentRequirement Required
src/chess/Main.java:643:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:643:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:644:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:646:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:647:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:648:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:649:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:650:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:651:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:652:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:653:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:654:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:654:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:655:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:655:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:656:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:656:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:657:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:658:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:659:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:660:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:660:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:661:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:662:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:663:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:664:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:664:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:665:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:665:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:666:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:666:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:667:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:667:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:668:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:672:	Each class should declare at least one constructor
src/chess/Main.java:672:	To avoid mistakes add a comment at the beginning of the TimeChange nested class if you want a default access modifier
src/chess/Main.java:672:	headerCommentRequirement Required
src/chess/Main.java:675:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:675:	publicMethodCommentRequirement Required
src/chess/Main.java:677:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:682:	The class 'SelectHandler' has a Cyclomatic Complexity of 9 (Highest = 16).
src/chess/Main.java:682:	The class 'SelectHandler' has a Modified Cyclomatic Complexity of 9 (Highest = 16).
src/chess/Main.java:682:	The class 'SelectHandler' has a Standard Cyclomatic Complexity of 9 (Highest = 16).
src/chess/Main.java:682:	To avoid mistakes add a comment at the beginning of the SelectHandler nested class if you want a default access modifier
src/chess/Main.java:682:	headerCommentRequirement Required
src/chess/Main.java:684:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:684:	Private field 'color' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:684:	fieldCommentRequirement Required
src/chess/Main.java:686:	Avoid variables with short names like i
src/chess/Main.java:686:	Parameter 'i' is not assigned and could be declared final
src/chess/Main.java:691:	Found 'UR'-anomaly for variable 's' (lines '691'-'734').
src/chess/Main.java:691:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:691:	The method 'actionPerformed' has a Cyclomatic Complexity of 16.
src/chess/Main.java:691:	The method 'actionPerformed' has a Modified Cyclomatic Complexity of 16.
src/chess/Main.java:691:	The method 'actionPerformed' has a Standard Cyclomatic Complexity of 16.
src/chess/Main.java:691:	The method actionPerformed() has an NPath complexity of 4500000
src/chess/Main.java:691:	publicMethodCommentRequirement Required
src/chess/Main.java:694:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:694:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:695:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:695:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:695:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:695:	Avoid variables with short names like n
src/chess/Main.java:695:	Found 'DD'-anomaly for variable 'n' (lines '695'-'707').
src/chess/Main.java:695:	Found 'DU'-anomaly for variable 'n' (lines '695'-'743').
src/chess/Main.java:696:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:696:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:696:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:696:	Avoid variables with short names like jc
src/chess/Main.java:696:	Found 'DU'-anomaly for variable 'jc' (lines '696'-'743').
src/chess/Main.java:696:	Local variable 'jc' could be declared final
src/chess/Main.java:697:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:697:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:697:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:697:	Found 'DU'-anomaly for variable 'ojc' (lines '697'-'743').
src/chess/Main.java:697:	Local variable 'ojc' could be declared final
src/chess/Main.java:698:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:698:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:698:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:698:	Avoid variables with short names like pl
src/chess/Main.java:698:	Found 'DU'-anomaly for variable 'pl' (lines '698'-'743').
src/chess/Main.java:698:	Local variable 'pl' could be declared final
src/chess/Main.java:700:	Local variable 'opl' could be declared final
src/chess/Main.java:701:	Avoid using if statements without curly braces
src/chess/Main.java:701:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:702:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:703:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:703:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:703:	Found 'DU'-anomaly for variable 'det' (lines '703'-'743').
src/chess/Main.java:703:	Local variable 'det' could be declared final
src/chess/Main.java:704:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:704:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:704:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:704:	Avoid variables with short names like PL
src/chess/Main.java:704:	Found 'DU'-anomaly for variable 'PL' (lines '704'-'743').
src/chess/Main.java:704:	Local variable 'PL' could be declared final
src/chess/Main.java:704:	Variables should start with a lowercase character, 'PL' starts with uppercase character.
src/chess/Main.java:705:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:705:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:705:	Avoid using if statements without curly braces
src/chess/Main.java:706:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:707:	Found 'DU'-anomaly for variable 'n' (lines '707'-'743').
src/chess/Main.java:707:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:708:	Avoid variables with short names like it
src/chess/Main.java:708:	Local variable 'it' could be declared final
src/chess/Main.java:708:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:709:	Local variable 'oit' could be declared final
src/chess/Main.java:709:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:712:	Avoid variables with short names like p
src/chess/Main.java:712:	Local variable 'p' could be declared final
src/chess/Main.java:713:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:713:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:714:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:719:	Avoid variables with short names like p
src/chess/Main.java:719:	Local variable 'p' could be declared final
src/chess/Main.java:720:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:720:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:721:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:725:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:725:	Avoid using if statements without curly braces
src/chess/Main.java:728:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:728:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:728:	Avoid using if...else statements without curly braces
src/chess/Main.java:730:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:730:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:730:	Avoid using if...else statements without curly braces
src/chess/Main.java:731:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:732:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:733:	Avoid using for statements without curly braces
src/chess/Main.java:733:	Local variable 's' could be declared final
src/chess/Main.java:734:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:735:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:736:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:737:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:739:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:740:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:741:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:742:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:749:	To avoid mistakes add a comment at the beginning of the Handler nested class if you want a default access modifier
src/chess/Main.java:749:	headerCommentRequirement Required
src/chess/Main.java:750:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:750:	Private field 'color' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:750:	fieldCommentRequirement Required
src/chess/Main.java:751:	Avoid variables with short names like i
src/chess/Main.java:751:	Parameter 'i' is not assigned and could be declared final
src/chess/Main.java:756:	Avoid variables with short names like e
src/chess/Main.java:756:	Parameter 'e' is not assigned and could be declared final
src/chess/Main.java:756:	The method actionPerformed() has an NPath complexity of 1250
src/chess/Main.java:756:	publicMethodCommentRequirement Required
src/chess/Main.java:758:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:758:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:758:	Avoid variables with short names like n
src/chess/Main.java:758:	Found 'DD'-anomaly for variable 'n' (lines '758'-'763').
src/chess/Main.java:759:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:759:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:759:	Avoid variables with short names like j
src/chess/Main.java:759:	Local variable 'j' could be declared final
src/chess/Main.java:760:	Avoid variables with short names like N
src/chess/Main.java:760:	Local variable 'N' could be declared final
src/chess/Main.java:760:	Variables should start with a lowercase character, 'N' starts with uppercase character.
src/chess/Main.java:761:	Avoid variables with short names like it
src/chess/Main.java:761:	Found 'DU'-anomaly for variable 'it' (lines '761'-'795').
src/chess/Main.java:761:	Local variable 'it' could be declared final
src/chess/Main.java:761:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:762:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:762:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:762:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:762:	Found 'DU'-anomaly for variable 'det' (lines '762'-'795').
src/chess/Main.java:762:	Local variable 'det' could be declared final
src/chess/Main.java:765:	Avoid if (x != y) ..; else ..;
src/chess/Main.java:770:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:770:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:772:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:775:	Avoid if (x != y) ..; else ..;
src/chess/Main.java:775:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:776:	Local variable 'tem' could be declared final
src/chess/Main.java:779:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:779:	Avoid using if...else statements without curly braces
src/chess/Main.java:781:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Main.java:781:	Avoid using if...else statements without curly braces
src/chess/Main.java:783:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:783:	Avoid using if...else statements without curly braces
src/chess/Main.java:786:	Avoid using if...else statements without curly braces
src/chess/Main.java:787:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:791:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:792:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:793:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:794:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Player.java:20:	Comment is too large: Line too long
src/chess/Player.java:23:	The class 'Player' has a Cyclomatic Complexity of 3 (Highest = 13).
src/chess/Player.java:23:	The class 'Player' has a Modified Cyclomatic Complexity of 3 (Highest = 13).
src/chess/Player.java:23:	The class 'Player' has a Standard Cyclomatic Complexity of 3 (Highest = 13).
src/chess/Player.java:26:	Field name has the same name as a method
src/chess/Player.java:26:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Player.java:26:	Private field 'name' could be made final; it is only initialized in the declaration or constructor.
src/chess/Player.java:26:	fieldCommentRequirement Required
src/chess/Player.java:27:	Field gamesplayed has the same name as a method
src/chess/Player.java:27:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Player.java:27:	fieldCommentRequirement Required
src/chess/Player.java:28:	Field gameswon has the same name as a method
src/chess/Player.java:28:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Player.java:28:	fieldCommentRequirement Required
src/chess/Player.java:31:	Parameter 'name' is not assigned and could be declared final
src/chess/Player.java:31:	publicMethodCommentRequirement Required
src/chess/Player.java:35:	Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/chess/Player.java:36:	Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/chess/Player.java:40:	publicMethodCommentRequirement Required
src/chess/Player.java:46:	publicMethodCommentRequirement Required
src/chess/Player.java:52:	publicMethodCommentRequirement Required
src/chess/Player.java:58:	publicMethodCommentRequirement Required
src/chess/Player.java:60:	Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/chess/Player.java:64:	publicMethodCommentRequirement Required
src/chess/Player.java:70:	publicMethodCommentRequirement Required
src/chess/Player.java:76:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Player.java:76:	Method names should not contain underscores
src/chess/Player.java:76:	publicMethodCommentRequirement Required
src/chess/Player.java:79:	Found 'DD'-anomaly for variable 'input' (lines '79'-'84').
src/chess/Player.java:80:	Local variable 'players' could be declared final
src/chess/Player.java:83:	Local variable 'infile' could be declared final
src/chess/Player.java:83:	The String literal "user.dir" appears 4 times in this file; the first occurrence is on line 83
src/chess/Player.java:101:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Player.java:105:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:106:	Avoid empty catch blocks
src/chess/Player.java:111:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:113:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/chess/Player.java:115:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:120:	Method names should not contain underscores
src/chess/Player.java:120:	Method names should not start with capital letters
src/chess/Player.java:120:	The method 'Update_Player' has a Cyclomatic Complexity of 13.
src/chess/Player.java:120:	The method 'Update_Player' has a Modified Cyclomatic Complexity of 13.
src/chess/Player.java:120:	The method 'Update_Player' has a Standard Cyclomatic Complexity of 13.
src/chess/Player.java:120:	publicMethodCommentRequirement Required
src/chess/Player.java:122:	Found 'DD'-anomaly for variable 'input' (lines '122'-'148').
src/chess/Player.java:122:	Found 'DU'-anomaly for variable 'input' (lines '122'-'195').
src/chess/Player.java:123:	Found 'DD'-anomaly for variable 'output' (lines '123'-'143').
src/chess/Player.java:123:	Found 'DD'-anomaly for variable 'output' (lines '123'-'149').
src/chess/Player.java:124:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'temp_player' is not final.
src/chess/Player.java:125:	Found 'DD'-anomaly for variable 'inputfile' (lines '125'-'129').
src/chess/Player.java:126:	Found 'DD'-anomaly for variable 'outputfile' (lines '126'-'130').
src/chess/Player.java:134:	System.exit() should not be used in J2EE/JEE apps
src/chess/Player.java:139:	Avoid unnecessary comparisons in boolean expressions
src/chess/Player.java:139:	Avoid using if statements without curly braces
src/chess/Player.java:141:	Avoid unnecessary comparisons in boolean expressions
src/chess/Player.java:143:	Unnecessary use of fully qualified name 'java.io.FileOutputStream' due to existing import 'java.io.FileOutputStream'
src/chess/Player.java:150:	Found 'DD'-anomaly for variable 'playerdonotexist' (lines '150'-'159').
src/chess/Player.java:156:	Potential violation of Law of Demeter (method chain calls)
src/chess/Player.java:156:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:159:	Found 'DD'-anomaly for variable 'playerdonotexist' (lines '159'-'159').
src/chess/Player.java:162:	Avoid using if...else statements without curly braces
src/chess/Player.java:168:	Avoid using if statements without curly braces
src/chess/Player.java:173:	Local variable 'newf' could be declared final
src/chess/Player.java:174:	Avoid unnecessary comparisons in boolean expressions
src/chess/Player.java:174:	Avoid using if statements without curly braces
src/chess/Player.java:175:	System.out.println is used
src/chess/Player.java:179:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:183:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:188:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:191:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/chess/Player.java:191:	Avoid empty catch blocks
src/chess/Time.java:12:	Comment is too large: Line too long
src/chess/Time.java:17:	Avoid short class names like Time
src/chess/Time.java:19:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Time.java:19:	Private field 'label' could be made final; it is only initialized in the declaration or constructor.
src/chess/Time.java:19:	fieldCommentRequirement Required
src/chess/Time.java:20:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Time.java:20:	To avoid mistakes add a comment at the beginning of the countdownTimer field if you want a default access modifier
src/chess/Time.java:20:	Use explicit scoping instead of the default package private level
src/chess/Time.java:20:	fieldCommentRequirement Required
src/chess/Time.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Time.java:21:	To avoid mistakes add a comment at the beginning of the Timerem field if you want a default access modifier
src/chess/Time.java:21:	Use explicit scoping instead of the default package private level
src/chess/Time.java:21:	Variables should start with a lowercase character, 'Timerem' starts with uppercase character.
src/chess/Time.java:21:	fieldCommentRequirement Required
src/chess/Time.java:22:	Parameter 'passedLabel' is not assigned and could be declared final
src/chess/Time.java:22:	publicMethodCommentRequirement Required
src/chess/Time.java:30:	publicMethodCommentRequirement Required
src/chess/Time.java:36:	publicMethodCommentRequirement Required
src/chess/Time.java:41:	Comment is too large: Line too long
src/chess/Time.java:42:	Each class should declare at least one constructor
src/chess/Time.java:42:	To avoid mistakes add a comment at the beginning of the CountdownTimerListener nested class if you want a default access modifier
src/chess/Time.java:42:	headerCommentRequirement Required
src/chess/Time.java:44:	Avoid variables with short names like e
src/chess/Time.java:44:	Parameter 'e' is not assigned and could be declared final
src/chess/Time.java:44:	publicMethodCommentRequirement Required
src/chess/Time.java:46:	Use one line for each declaration, it enhances code readability.
src/chess/Time.java:51:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Time.java:51:	No need to call String.valueOf to append to a string.
src/chess/Time.java:51:	No need to call String.valueOf to append to a string.
src/chess/Time.java:56:	Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/chess/Time.java:59:	Potential violation of Law of Demeter (static property access)
src/pieces/Bishop.java:10:	Comment is too large: Line too long
src/pieces/Bishop.java:14:	The class 'Bishop' has a Cyclomatic Complexity of 10 (Highest = 17).
src/pieces/Bishop.java:14:	The class 'Bishop' has a Modified Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Bishop.java:14:	The class 'Bishop' has a Standard Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Bishop.java:17:	Avoid variables with short names like c
src/pieces/Bishop.java:17:	Avoid variables with short names like i
src/pieces/Bishop.java:17:	Avoid variables with short names like p
src/pieces/Bishop.java:17:	It is a good practice to call super() in a constructor
src/pieces/Bishop.java:17:	Parameter 'c' is not assigned and could be declared final
src/pieces/Bishop.java:17:	Parameter 'i' is not assigned and could be declared final
src/pieces/Bishop.java:17:	Parameter 'p' is not assigned and could be declared final
src/pieces/Bishop.java:17:	publicMethodCommentRequirement Required
src/pieces/Bishop.java:24:	Comment is too large: Line too long
src/pieces/Bishop.java:26:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Bishop.java:26:	Avoid variables with short names like x
src/pieces/Bishop.java:26:	Avoid variables with short names like y
src/pieces/Bishop.java:26:	Parameter 'state' is not assigned and could be declared final
src/pieces/Bishop.java:26:	Parameter 'x' is not assigned and could be declared final
src/pieces/Bishop.java:26:	Parameter 'y' is not assigned and could be declared final
src/pieces/Bishop.java:26:	The method 'move' has a Cyclomatic Complexity of 17.
src/pieces/Bishop.java:26:	The method 'move' has a Modified Cyclomatic Complexity of 13.
src/pieces/Bishop.java:26:	The method 'move' has a Standard Cyclomatic Complexity of 13.
src/pieces/Bishop.java:26:	The method move() has an NPath complexity of 625
src/pieces/Bishop.java:26:	publicMethodCommentRequirement Required
src/pieces/Bishop.java:31:	Use one line for each declaration, it enhances code readability.
src/pieces/Bishop.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:36:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:36:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:39:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:52:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:52:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:52:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:54:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:67:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:69:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:82:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:84:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:87:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:87:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:7:	Avoid short class names like King
src/pieces/King.java:7:	The class 'King' has a Cyclomatic Complexity of 14 (Highest = 82).
src/pieces/King.java:7:	The class 'King' has a Modified Cyclomatic Complexity of 8 (Highest = 44).
src/pieces/King.java:7:	The class 'King' has a Standard Cyclomatic Complexity of 8 (Highest = 44).
src/pieces/King.java:7:	headerCommentRequirement Required
src/pieces/King.java:9:	Avoid variables with short names like x
src/pieces/King.java:9:	Avoid variables with short names like y
src/pieces/King.java:9:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/pieces/King.java:9:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/pieces/King.java:9:	fieldCommentRequirement Required
src/pieces/King.java:12:	Avoid variables with short names like c
src/pieces/King.java:12:	Avoid variables with short names like i
src/pieces/King.java:12:	Avoid variables with short names like p
src/pieces/King.java:12:	Avoid variables with short names like x
src/pieces/King.java:12:	Avoid variables with short names like y
src/pieces/King.java:12:	It is a good practice to call super() in a constructor
src/pieces/King.java:12:	Parameter 'c' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'i' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'p' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'x' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'y' is not assigned and could be declared final
src/pieces/King.java:12:	publicMethodCommentRequirement Required
src/pieces/King.java:22:	Avoid variables with short names like x
src/pieces/King.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/King.java:22:	publicMethodCommentRequirement Required
src/pieces/King.java:26:	Avoid variables with short names like y
src/pieces/King.java:26:	Parameter 'y' is not assigned and could be declared final
src/pieces/King.java:26:	publicMethodCommentRequirement Required
src/pieces/King.java:30:	publicMethodCommentRequirement Required
src/pieces/King.java:34:	publicMethodCommentRequirement Required
src/pieces/King.java:39:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/King.java:39:	Avoid variables with short names like x
src/pieces/King.java:39:	Avoid variables with short names like y
src/pieces/King.java:39:	Parameter 'state' is not assigned and could be declared final
src/pieces/King.java:39:	Parameter 'x' is not assigned and could be declared final
src/pieces/King.java:39:	Parameter 'y' is not assigned and could be declared final
src/pieces/King.java:39:	publicMethodCommentRequirement Required
src/pieces/King.java:43:	Found 'DU'-anomaly for variable 'posx' (lines '43'-'50').
src/pieces/King.java:43:	Local variable 'posx' could be declared final
src/pieces/King.java:44:	Found 'DU'-anomaly for variable 'posy' (lines '44'-'50').
src/pieces/King.java:44:	Local variable 'posy' could be declared final
src/pieces/King.java:45:	Avoid using for statements without curly braces
src/pieces/King.java:46:	Avoid using if statements without curly braces
src/pieces/King.java:46:	Useless parentheses.
src/pieces/King.java:47:	Avoid using if statements without curly braces
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	These nested if statements could be combined
src/pieces/King.java:47:	Useless parentheses.
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:55:	Comment is too large: Line too long
src/pieces/King.java:56:	Avoid really long methods.
src/pieces/King.java:56:	Consider using varargs for methods or constructors which take an array the last parameter.
src/pieces/King.java:56:	Parameter 'state' is not assigned and could be declared final
src/pieces/King.java:56:	The method 'isindanger' has a Cyclomatic Complexity of 82.
src/pieces/King.java:56:	The method 'isindanger' has a Modified Cyclomatic Complexity of 44.
src/pieces/King.java:56:	The method 'isindanger' has a Standard Cyclomatic Complexity of 44.
src/pieces/King.java:56:	The method isindanger() has an NCSS line count of 123
src/pieces/King.java:56:	The method isindanger() has an NPath complexity of 967541888
src/pieces/King.java:56:	publicMethodCommentRequirement Required
src/pieces/King.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:63:	Avoid using if...else statements without curly braces
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:65:	Avoid using if...else statements without curly braces
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Useless parentheses.
src/pieces/King.java:68:	Useless parentheses.
src/pieces/King.java:69:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:69:	Avoid using if...else statements without curly braces
src/pieces/King.java:71:	Avoid using if...else statements without curly braces
src/pieces/King.java:76:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:76:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:76:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:77:	Avoid using if...else statements without curly braces
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:79:	Avoid using if...else statements without curly braces
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Useless parentheses.
src/pieces/King.java:82:	Useless parentheses.
src/pieces/King.java:83:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:83:	Avoid using if...else statements without curly braces
src/pieces/King.java:85:	Avoid using if...else statements without curly braces
src/pieces/King.java:90:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:90:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:90:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:91:	Avoid using if...else statements without curly braces
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:93:	Avoid using if...else statements without curly braces
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Useless parentheses.
src/pieces/King.java:96:	Useless parentheses.
src/pieces/King.java:97:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:97:	Avoid using if...else statements without curly braces
src/pieces/King.java:99:	Avoid using if...else statements without curly braces
src/pieces/King.java:104:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:104:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:104:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:105:	Avoid using if...else statements without curly braces
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:107:	Avoid using if...else statements without curly braces
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Useless parentheses.
src/pieces/King.java:110:	Useless parentheses.
src/pieces/King.java:111:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:111:	Avoid using if...else statements without curly braces
src/pieces/King.java:113:	Avoid using if...else statements without curly braces
src/pieces/King.java:118:	Use one line for each declaration, it enhances code readability.
src/pieces/King.java:121:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:121:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:121:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:127:	Avoid using if...else statements without curly braces
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:131:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:131:	Avoid using if...else statements without curly braces
src/pieces/King.java:133:	Avoid using if...else statements without curly braces
src/pieces/King.java:139:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:139:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:139:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:145:	Avoid using if...else statements without curly braces
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:149:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:149:	Avoid using if...else statements without curly braces
src/pieces/King.java:151:	Avoid using if...else statements without curly braces
src/pieces/King.java:157:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:157:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:157:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:163:	Avoid using if...else statements without curly braces
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:167:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:167:	Avoid using if...else statements without curly braces
src/pieces/King.java:169:	Avoid using if...else statements without curly braces
src/pieces/King.java:175:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:175:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:175:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:181:	Avoid using if...else statements without curly braces
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:185:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:185:	Avoid using if...else statements without curly braces
src/pieces/King.java:187:	Avoid using if...else statements without curly braces
src/pieces/King.java:192:	Found 'DU'-anomaly for variable 'posx' (lines '192'-'228').
src/pieces/King.java:192:	Local variable 'posx' could be declared final
src/pieces/King.java:193:	Found 'DU'-anomaly for variable 'posy' (lines '193'-'228').
src/pieces/King.java:193:	Local variable 'posy' could be declared final
src/pieces/King.java:194:	Avoid using for statements without curly braces
src/pieces/King.java:195:	Avoid using if statements without curly braces
src/pieces/King.java:195:	Useless parentheses.
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	These nested if statements could be combined
src/pieces/King.java:196:	Useless parentheses.
src/pieces/King.java:198:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:203:	Found 'DU'-anomaly for variable 'pox' (lines '203'-'228').
src/pieces/King.java:203:	Local variable 'pox' could be declared final
src/pieces/King.java:204:	Found 'DU'-anomaly for variable 'poy' (lines '204'-'228').
src/pieces/King.java:204:	Local variable 'poy' could be declared final
src/pieces/King.java:206:	Avoid using for statements without curly braces
src/pieces/King.java:207:	Avoid using if statements without curly braces
src/pieces/King.java:207:	Useless parentheses.
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	These nested if statements could be combined
src/pieces/King.java:208:	Useless parentheses.
src/pieces/King.java:210:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:215:	Avoid using if statements without curly braces
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Useless parentheses.
src/pieces/King.java:216:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:217:	Avoid using if statements without curly braces
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Useless parentheses.
src/pieces/King.java:218:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:222:	Avoid using if statements without curly braces
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Useless parentheses.
src/pieces/King.java:223:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:224:	Avoid using if statements without curly braces
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Useless parentheses.
src/pieces/King.java:225:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/Knight.java:15:	Avoid variables with short names like c
src/pieces/Knight.java:15:	Avoid variables with short names like i
src/pieces/Knight.java:15:	Avoid variables with short names like p
src/pieces/Knight.java:15:	It is a good practice to call super() in a constructor
src/pieces/Knight.java:15:	Parameter 'c' is not assigned and could be declared final
src/pieces/Knight.java:15:	Parameter 'i' is not assigned and could be declared final
src/pieces/Knight.java:15:	Parameter 'p' is not assigned and could be declared final
src/pieces/Knight.java:15:	publicMethodCommentRequirement Required
src/pieces/Knight.java:25:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Knight.java:25:	Avoid variables with short names like x
src/pieces/Knight.java:25:	Avoid variables with short names like y
src/pieces/Knight.java:25:	Parameter 'state' is not assigned and could be declared final
src/pieces/Knight.java:25:	Parameter 'x' is not assigned and could be declared final
src/pieces/Knight.java:25:	Parameter 'y' is not assigned and could be declared final
src/pieces/Knight.java:25:	publicMethodCommentRequirement Required
src/pieces/Knight.java:28:	Found 'DU'-anomaly for variable 'posx' (lines '28'-'37').
src/pieces/Knight.java:28:	Local variable 'posx' could be declared final
src/pieces/Knight.java:29:	Found 'DU'-anomaly for variable 'posy' (lines '29'-'37').
src/pieces/Knight.java:29:	Local variable 'posy' could be declared final
src/pieces/Knight.java:30:	Avoid using for statements without curly braces
src/pieces/Knight.java:31:	Avoid using if statements without curly braces
src/pieces/Knight.java:31:	Useless parentheses.
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	These nested if statements could be combined
src/pieces/Knight.java:32:	Useless parentheses.
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:11:	Avoid short class names like Pawn
src/pieces/Pawn.java:11:	The class 'Pawn' has a Cyclomatic Complexity of 12 (Highest = 22).
src/pieces/Pawn.java:11:	The class 'Pawn' has a Modified Cyclomatic Complexity of 8 (Highest = 14).
src/pieces/Pawn.java:11:	The class 'Pawn' has a Standard Cyclomatic Complexity of 8 (Highest = 14).
src/pieces/Pawn.java:14:	Avoid variables with short names like c
src/pieces/Pawn.java:14:	Avoid variables with short names like i
src/pieces/Pawn.java:14:	Avoid variables with short names like p
src/pieces/Pawn.java:14:	It is a good practice to call super() in a constructor
src/pieces/Pawn.java:14:	Parameter 'c' is not assigned and could be declared final
src/pieces/Pawn.java:14:	Parameter 'i' is not assigned and could be declared final
src/pieces/Pawn.java:14:	Parameter 'p' is not assigned and could be declared final
src/pieces/Pawn.java:14:	publicMethodCommentRequirement Required
src/pieces/Pawn.java:22:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Pawn.java:22:	Avoid variables with short names like x
src/pieces/Pawn.java:22:	Avoid variables with short names like y
src/pieces/Pawn.java:22:	Parameter 'state' is not assigned and could be declared final
src/pieces/Pawn.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/Pawn.java:22:	Parameter 'y' is not assigned and could be declared final
src/pieces/Pawn.java:22:	The method 'move' has a Cyclomatic Complexity of 22.
src/pieces/Pawn.java:22:	The method 'move' has a Modified Cyclomatic Complexity of 14.
src/pieces/Pawn.java:22:	The method 'move' has a Standard Cyclomatic Complexity of 14.
src/pieces/Pawn.java:22:	The method move() has an NPath complexity of 256
src/pieces/Pawn.java:22:	publicMethodCommentRequirement Required
src/pieces/Pawn.java:31:	Avoid using if statements without curly braces
src/pieces/Pawn.java:32:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/Pawn.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:36:	Avoid using Literals in Conditional Statements
src/pieces/Pawn.java:38:	Avoid using if statements without curly braces
src/pieces/Pawn.java:38:	Deeply nested if..then statements are hard to read
src/pieces/Pawn.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:38:	These nested if statements could be combined
src/pieces/Pawn.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Avoid using if statements without curly braces
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Useless parentheses.
src/pieces/Pawn.java:42:	Useless parentheses.
src/pieces/Pawn.java:42:	Useless parentheses.
src/pieces/Pawn.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Avoid using if statements without curly braces
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Useless parentheses.
src/pieces/Pawn.java:44:	Useless parentheses.
src/pieces/Pawn.java:44:	Useless parentheses.
src/pieces/Pawn.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:49:	Avoid using Literals in Conditional Statements
src/pieces/Pawn.java:49:	Avoid using if statements without curly braces
src/pieces/Pawn.java:50:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/Pawn.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:54:	Avoid using Literals in Conditional Statements
src/pieces/Pawn.java:56:	Avoid using if statements without curly braces
src/pieces/Pawn.java:56:	Deeply nested if..then statements are hard to read
src/pieces/Pawn.java:56:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:56:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:56:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:56:	These nested if statements could be combined
src/pieces/Pawn.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Avoid using if statements without curly braces
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Useless parentheses.
src/pieces/Pawn.java:60:	Useless parentheses.
src/pieces/Pawn.java:60:	Useless parentheses.
src/pieces/Pawn.java:61:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:61:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Avoid using if statements without curly braces
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Useless parentheses.
src/pieces/Pawn.java:62:	Useless parentheses.
src/pieces/Pawn.java:62:	Useless parentheses.
src/pieces/Pawn.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Piece.java:9:	Comment is too large: Line too long
src/pieces/Piece.java:11:	Comment is too large: Line too long
src/pieces/Piece.java:14:	Abstract classes should be named AbstractXXX
src/pieces/Piece.java:14:	Each class should declare at least one constructor
src/pieces/Piece.java:17:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/pieces/Piece.java:17:	fieldCommentRequirement Required
src/pieces/Piece.java:18:	Avoid using redundant field initializer for 'id'
src/pieces/Piece.java:18:	Avoid variables with short names like id
src/pieces/Piece.java:18:	fieldCommentRequirement Required
src/pieces/Piece.java:19:	fieldCommentRequirement Required
src/pieces/Piece.java:20:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Piece.java:20:	fieldCommentRequirement Required
src/pieces/Piece.java:21:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Piece.java:21:	Avoid variables with short names like x
src/pieces/Piece.java:21:	Avoid variables with short names like y
src/pieces/Piece.java:21:	publicMethodCommentRequirement Required
src/pieces/Piece.java:24:	Avoid variables with short names like id
src/pieces/Piece.java:24:	Parameter 'id' is not assigned and could be declared final
src/pieces/Piece.java:24:	publicMethodCommentRequirement Required
src/pieces/Piece.java:30:	Parameter 'path' is not assigned and could be declared final
src/pieces/Piece.java:30:	publicMethodCommentRequirement Required
src/pieces/Piece.java:36:	Avoid variables with short names like c
src/pieces/Piece.java:36:	Parameter 'c' is not assigned and could be declared final
src/pieces/Piece.java:36:	publicMethodCommentRequirement Required
src/pieces/Piece.java:42:	publicMethodCommentRequirement Required
src/pieces/Piece.java:48:	publicMethodCommentRequirement Required
src/pieces/Piece.java:54:	publicMethodCommentRequirement Required
src/pieces/Piece.java:59:	Comment is too large: Line too long
src/pieces/Piece.java:60:	publicMethodCommentRequirement Required
src/pieces/Queen.java:11:	The class 'Queen' has a Cyclomatic Complexity of 16 (Highest = 29).
src/pieces/Queen.java:11:	The class 'Queen' has a Modified Cyclomatic Complexity of 14 (Highest = 25).
src/pieces/Queen.java:11:	The class 'Queen' has a Standard Cyclomatic Complexity of 14 (Highest = 25).
src/pieces/Queen.java:14:	Avoid variables with short names like c
src/pieces/Queen.java:14:	Avoid variables with short names like i
src/pieces/Queen.java:14:	Avoid variables with short names like p
src/pieces/Queen.java:14:	It is a good practice to call super() in a constructor
src/pieces/Queen.java:14:	Parameter 'c' is not assigned and could be declared final
src/pieces/Queen.java:14:	Parameter 'i' is not assigned and could be declared final
src/pieces/Queen.java:14:	Parameter 'p' is not assigned and could be declared final
src/pieces/Queen.java:14:	publicMethodCommentRequirement Required
src/pieces/Queen.java:22:	Avoid really long methods.
src/pieces/Queen.java:22:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Queen.java:22:	Avoid variables with short names like x
src/pieces/Queen.java:22:	Avoid variables with short names like y
src/pieces/Queen.java:22:	Parameter 'state' is not assigned and could be declared final
src/pieces/Queen.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/Queen.java:22:	Parameter 'y' is not assigned and could be declared final
src/pieces/Queen.java:22:	The method 'move' has a Cyclomatic Complexity of 29.
src/pieces/Queen.java:22:	The method 'move' has a Modified Cyclomatic Complexity of 25.
src/pieces/Queen.java:22:	The method 'move' has a Standard Cyclomatic Complexity of 25.
src/pieces/Queen.java:22:	The method move() has an NPath complexity of 160000
src/pieces/Queen.java:22:	publicMethodCommentRequirement Required
src/pieces/Queen.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:34:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:36:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:49:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:51:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:54:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:54:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:65:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:65:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:65:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:66:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:68:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:79:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:79:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:79:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:80:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:80:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:80:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:82:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:85:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:85:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:95:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:95:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:95:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:96:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:98:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:101:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:101:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:111:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:111:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:111:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:113:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:116:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:116:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:125:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:125:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:125:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:126:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:128:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:131:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:131:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:140:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:140:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:140:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:141:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:141:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:141:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:143:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:146:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:146:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:11:	Avoid short class names like Rook
src/pieces/Rook.java:11:	The class 'Rook' has a Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Rook.java:11:	The class 'Rook' has a Modified Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Rook.java:11:	The class 'Rook' has a Standard Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Rook.java:14:	Avoid variables with short names like c
src/pieces/Rook.java:14:	Avoid variables with short names like i
src/pieces/Rook.java:14:	Avoid variables with short names like p
src/pieces/Rook.java:14:	It is a good practice to call super() in a constructor
src/pieces/Rook.java:14:	Parameter 'c' is not assigned and could be declared final
src/pieces/Rook.java:14:	Parameter 'i' is not assigned and could be declared final
src/pieces/Rook.java:14:	Parameter 'p' is not assigned and could be declared final
src/pieces/Rook.java:14:	publicMethodCommentRequirement Required
src/pieces/Rook.java:22:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Rook.java:22:	Avoid variables with short names like x
src/pieces/Rook.java:22:	Avoid variables with short names like y
src/pieces/Rook.java:22:	Parameter 'state' is not assigned and could be declared final
src/pieces/Rook.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/Rook.java:22:	Parameter 'y' is not assigned and could be declared final
src/pieces/Rook.java:22:	The method 'move' has a Cyclomatic Complexity of 13.
src/pieces/Rook.java:22:	The method 'move' has a Modified Cyclomatic Complexity of 13.
src/pieces/Rook.java:22:	The method 'move' has a Standard Cyclomatic Complexity of 13.
src/pieces/Rook.java:22:	The method move() has an NPath complexity of 256
src/pieces/Rook.java:22:	publicMethodCommentRequirement Required
src/pieces/Rook.java:29:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:29:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:29:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:30:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:30:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:30:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:32:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:44:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:46:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:58:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:58:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:58:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:60:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:72:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:74:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:77:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:77:	Potential violation of Law of Demeter (method chain calls)
